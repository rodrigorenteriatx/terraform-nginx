- name: Create backup of sshd_config
  shell: |
    sudo cp --archive /etc/ssh/sshd_config /etc/ssh/sshd_config-COPY-$(date +"%Y%m%d%H%M%S")

  # sudo sed -i -r -e '/^#|^$/ d' /etc/ssh/sshd_config: This command modifies the /etc/ssh/sshd_config file in-place (-i). It uses the sed stream editor to delete (d) all lines that start with a # (which are comments in the sshd_config file) or that are empty (^$). The -r option enables extended regular expressions, which allows the | character to be used to mean "or".

- name: Overwrite sshd_config with hardened configuration
  copy:
    src: ../sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0600'

- name: Remove comments and empty lines from sshd_config
  shell: |
    sudo sed -i -r -e '/^#|^$/ d' /etc/ssh/sshd_config

- name: CHeck if there are Duplicate entries with awk
  shell: |
    sudo awk 'NF && $1!~/^(#|HostKey)/{print $1}' /etc/ssh/sshd_config | sort | uniq -c | grep -v ' 1 '
  register: duplicate_entries
  ignore_errors: true

- name: Fail if there are duplicate entries
  fail:
    msg: "Duplicate entries found in /etc/ssh/sshd_config: {{ duplicate_entries.stdout }}"
  when: duplicate_entries.rc == 0


- name: Copy sshd_config to local machine
  fetch:
    src: /etc/ssh/sshd_config
    dest: /tmp/sshd_config.bak
    flat: yes

- name: Restart sshd service
  service:
    name: sshd
    state: restarted

- name: Wait for ssh service to become available
  wait_for:
    port: 22
    delay: 10
    timeout: 180

# This is a task in an Ansible playbook that uses the `fetch` module
# flat: yes`: This option, when set to `yes`, will cause the file to be stored on the local machine at the location specified in `dest`. If `flat` is `no` (the default), the file will be stored in a directory structure that mirrors the path of the file on the remote machine.
